{"version":3,"sources":["./src/app/pages/task-view/task-view.component.ts","./src/app/pages/task-view/task-view.component.html","./src/app/pages/login-page/login-page.component.ts","./src/app/pages/login-page/login-page.component.html","./src/app/pages/new-task/new-task.component.ts","./src/app/pages/new-task/new-task.component.html","./src/environments/environment.ts","./src/app/service/task.service.ts","./src/app/pages/new/new.component.ts","./src/app/pages/new/new.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/service/web-request.service.ts","./src/app/pages/edit-task/edit-task.component.ts","./src/app/pages/edit-task/edit-task.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { List } from 'src/app/models/list.models';\nimport { Task } from 'src/app/models/task.model';\nimport { TaskService } from 'src/app/service/task.service';\n\n@Component({\n  selector: 'app-task-view',\n  templateUrl: './task-view.component.html',\n  styleUrls: ['./task-view.component.scss']\n})\nexport class TaskViewComponent implements OnInit {\n\n  \n  public extendItem: any;\n  public listId: string = \"\";\n  \n  constructor(public taskService: TaskService, private route: ActivatedRoute, private rt: Router) { }\n\n  ngOnInit() {\n    this.taskService.getList().subscribe((res: any) => {\n      this.taskService.lists = res\n      if (this.taskService.lists.length == 0) {\n        this.rt.navigateByUrl('new-list')\n      }\n    }) \n    this.route.params.subscribe(\n      (params: Params) => {\n        if (params.listId) {\n          this.listId = params.listId;\n        }\n        this.taskService.getTasks(params.listId).subscribe((tasks: any) => {\n          this.taskService.tasks = tasks;\n        })\n      }\n    ) \n  }\n\n\n  // set the task to complete\n  onTaskClick(task: Task) {\n    this.taskService.complete(task).subscribe(()=> {\n    task.completed = !task.completed\n    })\n  }\n\n\n  // delete the task\n  onTaskDelete(task: Task) {\n    this.taskService.deleteTask(task).subscribe(() => {\n      this.taskService.tasks = this.taskService.tasks.filter((h) => h._id != task._id)\n    })\n  }\n\n  onListDelete(list: List) {\n  this.taskService.deleteList(list).subscribe(() => {\n    // update frontend\n    this.taskService.lists = this.taskService.lists.filter((l) => list._id != l._id)\n    // if this list is pressed while deleting it - return to main screen >\n    if (this.listId == list._id) {\n      this.rt.navigateByUrl('lists')\n    }\n    }).add(() => {\n      // remove all the tasks that were associated with this list\n      this.taskService.deleteAllTasksFromList(list).subscribe(() => {\n        this.taskService.tasks = this.taskService.tasks.filter((l) => {\n          l._listId != list._id\n        })\n      })\n    })\n  }\n\n}\n","<div class=\"centered-content\">\n  <div class=\"task-manager-container\">\n    <div class=\"sidebar has-background-white\">\n        <h1 class=\"title has-text-primary\">\n          Lists\n        </h1>\n        <div class=\"list-menu\">  \n          <a class=\"list-menu-item\" *ngFor=\"let list of taskService.lists\" [routerLink]=\"['/lists', list._id]\" [routerLinkActive]=\"['is-active']\">\n            <p>{{list.title | titlecase}}</p> \n            <a (click)=\"onListDelete(list)\" class=\"button is-pulled-right\"><i class=\"fas fa-trash-alt\"></i></a>\n          </a>\n        </div>\n          <button class=\"button is-primary has-text-white\" routerLink=\"/new-list\"> + New List</button>  \n    </div>\n\n    <div class=\"task-list-container has-background-light\">\n      <h1 class=\"title has-text-primary\">\n        Tasks\n      </h1>\n      <!-- Task elements -->\n      <div class=\"task\" *ngFor=\"let task of taskService.tasks\" [ngClass]=\"{'complete': task.completed, 'extended' : extendItem == task._id }\">\n       \n        <p (click)=\"onTaskClick(task)\">Title: {{task.title}}</p>\n        <p class=\"description\" *ngIf=\"extendItem == task._id\" (click)=\"onTaskClick(task)\">Description: {{task.body}}</p>\n        <div class=\"buttons\">\n          <a (click)=\"onTaskDelete(task)\" class=\"button is-pulled-right\"><i class=\"fas fa-trash-alt\"></i></a>\n          <a [routerLink]=\"['/lists', task._listId, task._id, 'edit-task']\" class=\"button is-pulled-right\"><i class=\"fas fa-edit\"></i></a>\n          <a *ngIf=\"extendItem != task._id\" (click)=\"extendItem = task._id\" class=\"button is-pulled-right\"><i class=\"fas fa-angle-down\"></i></a>\n          <a *ngIf=\"extendItem === task._id\" (click)=\"extendItem = ''\" class=\"button is-pulled-right\"><i class=\"fas fa-angle-up\"></i></a>\n        </div>\n      </div>\n    \n      <button *ngIf=\"listId\" class=\"circle-add-button button is-primary\" routerLink=\"./new-task\">\n        <p>+</p>\n      </button>\n\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"centered-content\">\n  <div class=\"login-box\">\n\n    <h1 class=\"title has-text-primary\">Login</h1>\n    <div class=\"field\">\n      <p class=\"control has-icons-left has-icons-right\">\n        <input class=\"input has-background-light\" type=\"email\" placeholder=\"Email\">\n        <span class=\"icon is-small is-left\">\n          <i class=\"fas fa-envelope\"></i>\n        </span>\n        <span class=\"icon is-small is-right\">\n          <i class=\"fas fa-check\"></i>\n        </span>\n      </p>\n    </div>\n    <div class=\"field\">\n      <p class=\"control has-icons-left\">\n        <input class=\"input has-background-light\" type=\"password\" placeholder=\"Password\">\n        <span class=\"icon is-small is-left\">\n          <i class=\"fas fa-lock\"></i>\n        </span>\n      </p>\n    </div>\n    <div class=\"field\">\n      <p class=\"control\">\n        <button class=\"button is-primary has-text-white is-pulled-right\">\n          Login\n        </button>\n      </p>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Task } from 'src/app/models/task.model';\nimport { TaskService } from 'src/app/service/task.service';\n\n@Component({\n  selector: 'app-new-task',\n  templateUrl: './new-task.component.html',\n  styleUrls: ['./new-task.component.scss']\n})\nexport class NewTaskComponent implements OnInit {\n\n\n  public listId: string = \"\"\n\n  constructor(private task: TaskService, private router: Router, private route: ActivatedRoute ) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.listId = params['listId']\n      }\n    )\n  }\n\n\n  createTask(body: string, title: string) {\n    let newTask = {title: title, body: body}\n    this.task.createTask(newTask, this.listId).subscribe((newTask: Task) => {\n      this.router.navigate(['/lists', this.listId])\n    })\n  }\n}\n","<div class=\"centered-content\">\n  <div class=\"modal-box\">\n    <h1 class=\"title\">Create a new task</h1>\n    <div class=\"field is-grouped \">\n      <p class=\"control is-expanded\">\n        <input #listTitleInput class=\"input is-medium\" type=\"text\" placeholder=\"Add a Task Title\" (keyup.enter)=\"createTask(listBodyInput.value, listTitleInput.value)\" >\n      </p>\n    </div>\n    <div class=\"field is-grouped \">\n      <p class=\"control is-expanded\">\n        <input #listBodyInput class=\"input is-medium\" type=\"text\" placeholder=\"Add a Task Description (optional)\" (change)=\"createTask(listBodyInput.value, listTitleInput.value)\">\n      </p>\n    </div>\n      <div class=\"field is-grouped is-grouped-right\">\n        <p class=\"control\">\n          <a class=\"button is-primary\" (click)=\"createTask(listBodyInput.value, listTitleInput.value)\">\n            Create\n          </a>\n        </p>\n        <p class=\"control\">\n          <a class=\"button is-light\" routerLink=\"\">\n            Cancel\n          </a>\n        </p>\n      \n    </div>\n  </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { List } from '../models/list.models';\nimport { Task } from '../models/task.model';\nimport { WebRequestService } from './web-request.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  public lists: List[] = [];\n  public tasks: Task[] = [];\n\n  constructor(private webReqService: WebRequestService) { }\n\n  public createList(title: string) {\n    // send a web request to create a new list\n    return this.webReqService.post('lists', {title})\n  }\n\n  public getList() {\n    // send a web request to create a new list\n    return this.webReqService.get('lists')\n  }\n\n  public getTasks(listId: string) {\n    return this.webReqService.get(`lists/${listId}/tasks`)\n  }\n\n\n  public createTask(body: object, listId: string) {\n    return this.webReqService.post(`lists/${listId}/tasks`, body )\n  }\n\n  public complete(task: Task) {\n    return this.webReqService.put(`lists/${task._listId}/tasks/${task._id}`, {completed: !task.completed})\n  }\n\n  public deleteTask(task: Task) {\n    return this.webReqService.delete(`lists/${task._listId}/tasks/${task._id}`)\n  }\n\n  public deleteList(list: List) {\n    return this.webReqService.delete(`lists/${list._id}`)\n  }\n\n  public deleteAllTasksFromList(list: List) {\n    return this.webReqService.delete(`lists/${list._id}`)\n  }\n\n  public editTask(task: Task) {\n    return this.webReqService.put(`lists/${task._listId}/tasks/${task._id}`, task)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, RouteReuseStrategy } from '@angular/router';\nimport { TaskService } from 'src/app/service/task.service';\nimport { List } from 'src/app/models/list.models'\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.scss']\n})\nexport class NewComponent implements OnInit {\n\n  constructor(private taskService: TaskService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  createNewList(title: string) {\n    this.taskService.createList(title).subscribe((res: List) => {\n      this.taskService.lists.push(res)\n    // navigate to /lists/res.id\n    this.router.navigate(['/lists', res._id])\n    })\n  }\n}\n","<div class=\"centered-content\">\n  <div class=\"modal-box\">\n    <h1 class=\"title\">Create a new list</h1>\n    <div class=\"field is-grouped \">\n      <p class=\"control is-expanded\">\n        <input #listTitleInput class=\"input is-medium\" type=\"text\" placeholder=\"Create a new list here\" (keyup.enter)=\"createNewList(listTitleInput.value)\">\n      </p>\n    </div>\n      <div class=\"field is-grouped is-grouped-right\">\n        <p class=\"control\">\n          <a class=\"button is-primary\" (click)=\"createNewList(listTitleInput.value)\" >\n            Create\n          </a>\n        </p>\n        <p class=\"control\">\n          <a class=\"button is-light\" routerLink=\"\">\n            Cancel\n          </a>\n        </p>\n    </div>\n  </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TaskViewComponent } from './pages/task-view/task-view.component';\n\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { NewComponent } from './pages/new/new.component';\nimport { NewTaskComponent } from './pages/new-task/new-task.component';\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\nimport { EditTaskComponent } from './pages/edit-task/edit-task.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskViewComponent,\n    NewComponent,\n    NewTaskComponent,\n    LoginPageComponent,\n    EditTaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebRequestService {\n\n  readonly ROOT_URL;\n\n  constructor(private http: HttpClient) { \n    this.ROOT_URL = ''\n  }\n\n  public get(uri: string) {\n    return this.http.get(`${this.ROOT_URL}/${uri}`);\n  }\n\n  public post(uri: string, body: object) {\n    return this.http.post(`${this.ROOT_URL}/${uri}`, body);\n  }\n\n  public put(uri: string, body: object) {\n    return this.http.put(`${this.ROOT_URL}/${uri}`, body);\n  }\n\n  public delete(uri: string) {\n    return this.http.delete(`${this.ROOT_URL}/${uri}`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Task } from 'src/app/models/task.model';\nimport { TaskService } from 'src/app/service/task.service';\n\n@Component({\n  selector: 'app-edit-task',\n  templateUrl: './edit-task.component.html',\n  styleUrls: ['./edit-task.component.scss']\n})\nexport class EditTaskComponent implements OnInit {\n\n  public listId: string = \"\";\n  public task: Task[] = []\n\n  constructor(public route: ActivatedRoute, public taskService: TaskService, public rt: Router) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.listId = params.listId\n        this.task = this.taskService.tasks.filter((ta) => ta._id == params.taskId )\n      }\n    )\n    // console.log(this.task)\n    if (this.task.length === 0) {\n        this.rt.navigateByUrl(`lists`)\n    }\n  }\n\n\n  editTask(title: string, body: string ){\n    this.task[0].body = body\n    this.task[0].title = title\n    this.taskService.editTask(this.task[0]).subscribe(() => {\n      this.rt.navigate(['/lists', this.listId])\n    })\n  }\n}\n","<div class=\"centered-content\">\n  <div class=\"modal-box\">\n    <h1 class=\"title\">Edit Task</h1>\n    <div class=\"field is-grouped \">\n      <p class=\"control is-expanded\">\n        <input #listTitleInput class=\"input has-background-light is-medium\" type=\"text\" [value]=\"task[0] && task[0].title\" placeholder=\"Add a Task Title\" (keyup.enter)=\"editTask(listTitleInput.value, listBodyInput.value)\" >\n      </p>\n    </div>\n    <div class=\"field is-grouped \">\n      <p class=\"control is-expanded\">\n        <input #listBodyInput class=\"input has-background-light is-medium\" type=\"text\" [value]=\"task[0] && task[0].body\"  placeholder=\"Add a Task Body (optional)\" (change)=\"editTask(listTitleInput.value, listBodyInput.value)\">\n      </p>\n    </div>\n      <div class=\"field is-grouped is-grouped-right\">\n        <p class=\"control\">\n          <a class=\"button is-primary\" (click)=\"editTask(listTitleInput.value, listBodyInput.value)\">\n            Edit\n          </a>\n        </p>\n        <p class=\"control\">\n          <a class=\"button is-light\" routerLink=\"\">\n            Cancel\n          </a>\n        </p>\n      \n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EditTaskComponent } from './pages/edit-task/edit-task.component';\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\nimport { NewTaskComponent } from './pages/new-task/new-task.component';\nimport { NewComponent } from './pages/new/new.component';\nimport { TaskViewComponent } from './pages/task-view/task-view.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo:'lists', pathMatch: 'full'},\n  { path: 'new-list', component: NewComponent}, \n  { path: 'login', component: LoginPageComponent}, \n  { path: 'lists', component: TaskViewComponent},\n  { path: 'lists/:listId', component: TaskViewComponent},\n  { path: 'lists/:listId/new-task', component: NewTaskComponent}, \n  { path: 'lists/:listId/:taskId/edit-task', component: EditTaskComponent}, \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}